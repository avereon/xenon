name: CI

on:
  push:
    branches: [ main, stable ]
  pull_request:
  schedule:
    # Noon Saturday UTC
    - cron: '0 12 * * 6'
  workflow_dispatch:

env:
  AVN_PRODUCT: "xenon"
  # The default release, should be overridden in config.sh
  AVN_RELEASE: "latest"
  # The default platform, should be overridden in the platform binaries jobs below
  AVN_PLATFORM: "linux"

  AVN_GPG_PASSWORD: ${{ secrets.AVN_GPG_PASSWORD }}
  AVN_KEYSTORE_PASSWORD: ${{ secrets.AVN_KEYSTORE_PASSWORD }}
  AVN_REPO_USERNAME: ${{ secrets.AVN_REPO_USERNAME }}
  AVN_REPO_PASSWORD: ${{ secrets.AVN_REPO_PASSWORD }}

  DISPLAY: ":99"
  GITHUB_REF: ${{ github.ref }}
  JAVA_VERSION: "25"
  MAVEN_OPTS: "-Xms1g -Xmx2g"
  MAVEN_PARMS: "-B -U -V --settings .github/settings.xml --file pom.xml"
  XVFB_PARMS: "-screen 0 1920x1080x24 -nolisten unix"

jobs:
  build:
    name: Compile, Unit Test, CodeQL
    runs-on: ubuntu-latest
    timeout-minutes: 15
    steps:
      - name: Fetch sources
        uses: actions/checkout@v5

      - name: Fetch CI/CD resources
        uses: actions/checkout@v5
        with:
          repository: avereon/canoe
          path: .github

      - name: Configuration
        shell: bash
        run: |
          source .github/config.sh

      # Required to render the product icon
      - name: Set up Virtual Display
        run: |
          Xvfb ${{env.DISPLAY}} ${{env.XVFB_PARMS}} &

      - name: Set up Java
        uses: actions/setup-java@v5
        with:
          distribution: ${{env.JAVA_DISTRO}}
          java-version: ${{env.JAVA_VERSION}}
          java-package: ${{env.JAVA_PACKAGE}}

      - name: Maven Repository Cache
        uses: actions/cache@v4
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Initialize CodeQL
        uses: github/codeql-action/init@v3
        with:
          languages: java

      - name: Compile
        run: |
          mvn ${{env.MAVEN_PARMS}} compile

      - name: Unit Tests
        run: |
          mvn ${{env.MAVEN_PARMS}} test

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v3

      - name: Upload Artifacts for Next Steps
        uses: actions/upload-artifact@v4
        with:
          name: build
          path: target

  publish:
    needs: build
    name: Maven Publish
    runs-on: ubuntu-latest
    timeout-minutes: 15
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/stable' || github.base_ref == 'refs/heads/main' || github.base_ref == 'refs/heads/stable'
    steps:
      - name: Fetch sources
        uses: actions/checkout@v5

      - name: Fetch CI/CD resources
        uses: actions/checkout@v5
        with:
          repository: avereon/canoe
          path: .github

      - name: Configuration
        shell: bash
        run: |
          source .github/config.sh

      # Required to render the product icon
      - name: Set up Virtual Display
        run: |
          Xvfb ${{env.DISPLAY}} ${{env.XVFB_PARMS}} &

      - name: Set up Java
        uses: actions/setup-java@v5
        with:
          distribution: ${{env.JAVA_DISTRO}}
          java-version: ${{env.JAVA_VERSION}}
          java-package: ${{env.JAVA_PACKAGE}}

      - name: Maven Repository Cache
        uses: actions/cache@v4
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Download Artifacts
        uses: actions/download-artifact@v5
        with:
          name: build
          path: target

      - name: Publish Artifacts
        run: |
          mvn ${{env.MAVEN_PARMS}} -Dmaven.test.skip=true deploy

      - name: Publish Icons
        run: |
          ssh -t ${{env.AVN_REPO_USERNAME}}@avereon.com "mkdir -p ${{env.PRODUCT_DEPLOY_PATH}};"
          if [ $? -ne 0 ]; then exit 1; fi
          scp -B target/main/images/${AVN_PRODUCT}.png ${{env.AVN_REPO_USERNAME}}@avereon.com:${PRODUCT_DEPLOY_PATH}/product.png 2>&1
          scp -B target/main/images/${AVN_PRODUCT}.png ${{env.AVN_REPO_USERNAME}}@avereon.com:${PRODUCT_DEPLOY_PATH}/product-dark.png 2>&1
          scp -B target/main/images/${AVN_PRODUCT}-light.png ${{env.AVN_REPO_USERNAME}}@avereon.com:${PRODUCT_DEPLOY_PATH}/product-light.png 2>&1

      - name: Publish JavaDoc
        run: |
          ssh -t ${{env.AVN_REPO_USERNAME}}@avereon.com "mkdir -p ${{env.JAVADOC_DEPLOY_PATH}};"
          if [ $? -ne 0 ]; then exit 1; fi
          scp -B target/${AVN_PRODUCT}-*-javadoc.jar ${{env.AVN_REPO_USERNAME}}@avereon.com:${{env.JAVADOC_DEPLOY_PATH}}/javadoc.jar 2>&1
          if [ $? -ne 0 ]; then exit 1; fi
          ssh -t ${{env.AVN_REPO_USERNAME}}@avereon.com "mkdir -p ${{env.JAVADOC_TARGET_PATH}};rm -rf ${{env.JAVADOC_TARGET_PATH}}/*;unzip -o ${{env.JAVADOC_DEPLOY_PATH}}/javadoc.jar -d ${{env.JAVADOC_TARGET_PATH}}"
          if [ $? -ne 0 ]; then exit 1; fi

  trigger_dependent_builds:
    needs: publish
    name: Trigger Dependent Builds
    runs-on: ubuntu-latest
    timeout-minutes: 15
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/stable' || github.base_ref == 'refs/heads/main' || github.base_ref == 'refs/heads/stable'
    steps:
      - name: Trigger Dependent Builds
        run: |
          curl -XPOST -u "${{secrets.AVN_CI_USERNAME}}:${{secrets.AVN_CI_PASSWORD}}" -H "Accept: application/vnd.github.v3+json" -H "Content-Type: application/json" https://api.github.com/repos/avereon/xenos/actions/workflows/ci.yml/dispatches --data '{"ref": "main"}'

  screenshots1x:
    needs: build
    name: Screenshots 1x
    runs-on: ubuntu-latest
    timeout-minutes: 5
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/stable' || github.base_ref == 'refs/heads/main' || github.base_ref == 'refs/heads/stable'
    env:
      AVN_PLATFORM: "linux"
      XVFB_PARMS: "-screen 0 1920x1080x24 -nolisten unix"
    steps:
      - name: Fetch sources
        uses: actions/checkout@v5

      - name: Fetch CI/CD resources
        uses: actions/checkout@v5
        with:
          repository: avereon/canoe
          path: .github

      - name: Configuration
        shell: bash
        run: |
          source .github/config.sh

      - name: Set up Virtual Display
        run: |
          Xvfb ${{env.DISPLAY}} ${{env.XVFB_PARMS}} &

      - name: Set up Java
        uses: actions/setup-java@v5
        with:
          distribution: ${{env.JAVA_DISTRO}}
          java-version: ${{env.JAVA_VERSION}}
          java-package: ${{env.JAVA_PACKAGE}}

      - name: Maven Repository Cache
        uses: actions/cache@v4
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Download Artifacts
        uses: actions/download-artifact@v5
        with:
          name: build
          path: target

      - name: Generate Screenshots
        run: |
          mvn ${{env.MAVEN_PARMS}} -Dmaven.test.skip=true -Pscreenshots1x package

      - name: Publish Screenshots
        run: |
          ssh -t ${{env.AVN_REPO_USERNAME}}@avereon.com "mkdir -p /opt/avn/web/screenshots;"
          if [ $? -ne 0 ]; then exit 1; fi
          scp -Br target/screenshots/* ${{env.AVN_REPO_USERNAME}}@avereon.com:/opt/avn/web/screenshots/ 2>&1

  screenshots2x:
    needs: build
    name: Screenshots 2x
    runs-on: ubuntu-latest
    timeout-minutes: 5
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/stable' || github.base_ref == 'refs/heads/main' || github.base_ref == 'refs/heads/stable'
    env:
      AVN_PLATFORM: "linux"
      XVFB_PARMS: "-screen 0 3840x2160x24 -nolisten unix"
    steps:
      - name: Fetch sources
        uses: actions/checkout@v5

      - name: Fetch CI/CD resources
        uses: actions/checkout@v5
        with:
          repository: avereon/canoe
          path: .github

      - name: Configuration
        shell: bash
        run: |
          source .github/config.sh

      - name: Set up Virtual Display
        run: |
          Xvfb ${{env.DISPLAY}} ${{env.XVFB_PARMS}} &

      - name: Set up Java
        uses: actions/setup-java@v5
        with:
          distribution: ${{env.JAVA_DISTRO}}
          java-version: ${{env.JAVA_VERSION}}
          java-package: ${{env.JAVA_PACKAGE}}

      - name: Maven Repository Cache
        uses: actions/cache@v4
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Download Artifacts
        uses: actions/download-artifact@v5
        with:
          name: build
          path: target

      - name: Generate Screenshots
        run: |
          mvn ${{env.MAVEN_PARMS}} -Dmaven.test.skip=true -Pscreenshots2x package

      - name: Publish Screenshots
        run: |
          ssh -t ${{env.AVN_REPO_USERNAME}}@avereon.com "mkdir -p /opt/avn/web/screenshots;"
          if [ $? -ne 0 ]; then exit 1; fi
          scp -Br target/screenshots/* ${{env.AVN_REPO_USERNAME}}@avereon.com:/opt/avn/web/screenshots/ 2>&1

  linux:
    needs: build
    name: Pack Linux Binaries
    runs-on: ubuntu-latest
    timeout-minutes: 30
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/stable' || github.base_ref == 'refs/heads/main' || github.base_ref == 'refs/heads/stable'
    env:
      AVN_PLATFORM: "linux"
    steps:
      - name: Fetch sources
        uses: actions/checkout@v5

      - name: Fetch CI/CD resources
        uses: actions/checkout@v5
        with:
          repository: avereon/canoe
          path: .github

      - name: Configuration
        shell: bash
        run: |
          source .github/config.sh

      - name: Set up Virtual Display
        run: |
          Xvfb ${{env.DISPLAY}} ${{env.XVFB_PARMS}} &

      - name: Set up Java
        uses: actions/setup-java@v5
        with:
          distribution: ${{env.JAVA_DISTRO}}
          java-version: ${{env.JAVA_VERSION}}
          java-package: ${{env.JAVA_PACKAGE}}

      - name: Maven Repository Cache
        uses: actions/cache@v4
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Download Artifacts
        uses: actions/download-artifact@v5
        with:
          name: build
          path: target

      - name: UI Tests
        run: |
          mvn ${{env.MAVEN_PARMS}} -P testui verify

      - name: Build Packs
        run: |
          chmod a+x $JAVA_HOME/lib/jspawnhelper
          mvn ${{env.MAVEN_PARMS}} -Dmaven.test.skip=true -P packs verify

      - name: Publish Install Pack
        run: |
          scp -B target/jpackage/*.deb ${{env.AVN_REPO_USERNAME}}@avereon.com:${PRODUCT_DEPLOY_PATH}/${AVN_PLATFORM}/install.deb 2>&1
      #    scp -B target/jpackage/*.rpm ${{env.AVN_REPO_USERNAME}}@avereon.com:${PRODUCT_DEPLOY_PATH}/${AVN_PLATFORM} 2>&1

      #      - name: Publish Install Pack (izpack)
      #        run: |
      #          scp -B target/*install.jar ${{env.AVN_REPO_USERNAME}}@avereon.com:${PRODUCT_DEPLOY_PATH}/${AVN_PLATFORM}/install.jar 2>&1

      - name: Publish Product Pack
        run: |
          scp -B target/*product.jar ${{env.AVN_REPO_USERNAME}}@avereon.com:${PRODUCT_DEPLOY_PATH}/${AVN_PLATFORM}/product.jar 2>&1

      - name: Publish Product Card
        run: |
          scp -B target/main/java/META-INF/*.card ${{env.AVN_REPO_USERNAME}}@avereon.com:${PRODUCT_DEPLOY_PATH}/${AVN_PLATFORM}/product.card 2>&1

  macos:
    needs: build
    name: Pack Mac OS Binaries
    runs-on: macos-latest
    timeout-minutes: 30
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/stable' || github.base_ref == 'refs/heads/main' || github.base_ref == 'refs/heads/stable'
    env:
      AVN_PLATFORM: "macosx"
    steps:
      - name: Fetch sources
        uses: actions/checkout@v5

      - name: Fetch CI/CD resources
        uses: actions/checkout@v5
        with:
          repository: avereon/canoe
          path: .github

      - name: Configuration
        shell: bash
        run: |
          source .github/config.sh

      - name: Set up Virtual Display
        run: |
          Xvfb ${{env.DISPLAY}} ${{env.XVFB_PARMS}} &

      - name: Set up Java
        uses: actions/setup-java@v5
        with:
          distribution: ${{env.JAVA_DISTRO}}
          java-version: ${{env.JAVA_VERSION}}
          java-package: ${{env.JAVA_PACKAGE}}

      - name: Setup Xcode
        uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: latest-stable

      - name: Maven Repository Cache
        uses: actions/cache@v4
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Download Artifacts
        uses: actions/download-artifact@v5
        with:
          name: build
          path: target

      - name: UI Tests
        run: |
          mvn ${{env.MAVEN_PARMS}} -P testui verify

      - name: MacOS Icon Pack
        run: |
          cd target/main/images
          mkdir icons.iconset
          
          cp ${AVN_PRODUCT}.png icons.iconset/icon512x512@2x.png
          sips -z 512 512 ${AVN_PRODUCT}.png --out icons.iconset/icon_512x512.png
          sips -z 512 512 ${AVN_PRODUCT}.png --out icons.iconset/icon_256x256@2x.png
          sips -z 256 256 ${AVN_PRODUCT}.png --out icons.iconset/icon_256x256.png
          sips -z 256 256 ${AVN_PRODUCT}.png --out icons.iconset/icon_128x128@2x.png
          sips -z 128 128 ${AVN_PRODUCT}.png --out icons.iconset/icon_128x128.png
          sips -z 128 128 ${AVN_PRODUCT}.png --out icons.iconset/icon_64x64@2x.png
          sips -z 64 64 ${AVN_PRODUCT}.png --out icons.iconset/icon_64x64.png
          sips -z 64 64 ${AVN_PRODUCT}.png --out icons.iconset/icon_32x32@2x.png
          sips -z 32 32 ${AVN_PRODUCT}.png --out icons.iconset/icon_32x32.png
          sips -z 32 32 ${AVN_PRODUCT}.png --out icons.iconset/icon_16x16@2x.png
          sips -z 16 16 ${AVN_PRODUCT}.png --out icons.iconset/icon_16x16.png
          
          iconutil -c icns icons.iconset
          ls
          rm -R icons.iconset
          cd -

      # For help building the MacOS icon pack
      # https://codetinkering.com/how-to-use-jpackage-tool-cli-for-macos-apps/#notes-about-macos-application-icons
      # target/main/images/${AVN_PRODUCT}.icns

      - name: Build Packs
        run: |
          chmod a+x $JAVA_HOME/lib/jspawnhelper
          mvn ${{env.MAVEN_PARMS}} -Dmaven.test.skip=true -P packs verify

      - name: Publish Install Pack
        run: |
          scp -B target/jpackage/*.dmg ${{env.AVN_REPO_USERNAME}}@avereon.com:${PRODUCT_DEPLOY_PATH}/${AVN_PLATFORM}/install.dmg 2>&1
      #    scp -B target/jpackage/*.pkg ${{env.AVN_REPO_USERNAME}}@avereon.com:${PRODUCT_DEPLOY_PATH}/${AVN_PLATFORM} 2>&1

      #      - name: Publish Install Pack (izpack)
      #        run: |
      #          scp -B target/*install.jar ${{env.AVN_REPO_USERNAME}}@avereon.com:${PRODUCT_DEPLOY_PATH}/${AVN_PLATFORM}/install.jar 2>&1

      - name: Publish Product Pack
        run: |
          scp -B target/*product.jar ${{env.AVN_REPO_USERNAME}}@avereon.com:${PRODUCT_DEPLOY_PATH}/${AVN_PLATFORM}/product.jar 2>&1

      - name: Publish Product Card
        run: |
          scp -B target/main/java/META-INF/*.card ${{env.AVN_REPO_USERNAME}}@avereon.com:${PRODUCT_DEPLOY_PATH}/${AVN_PLATFORM}/product.card 2>&1

  windows:
    needs: build
    name: Pack Windows Binaries
    runs-on: windows-latest
    timeout-minutes: 30
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/stable' || github.base_ref == 'refs/heads/main' || github.base_ref == 'refs/heads/stable'
    env:
      AVN_PLATFORM: "windows"
    steps:
      - name: Fetch sources
        uses: actions/checkout@v5

      - name: Fetch CI/CD resources
        uses: actions/checkout@v5
        with:
          repository: avereon/canoe
          path: .github

      - name: Configuration
        shell: bash
        run: |
          source .github/config.sh

      # Not needed on Windows
      #- name: Set up Virtual Display
      #  run: |
      #    Xvfb ${{env.DISPLAY}} ${{env.XVFB_PARMS}} &

      - name: Set up Java
        uses: actions/setup-java@v5
        with:
          distribution: ${{env.JAVA_DISTRO}}
          java-version: ${{env.JAVA_VERSION}}
          java-package: ${{env.JAVA_PACKAGE}}

      - name: Maven Repository Cache
        uses: actions/cache@v4
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Download Artifacts
        uses: actions/download-artifact@v5
        with:
          name: build
          path: target

      - name: UI Tests
        shell: bash
        run: |
          mvn ${{env.MAVEN_PARMS}} -P testui verify

      - name: Build Packs
        shell: bash
        run: |
          mvn ${{env.MAVEN_PARMS}} -Dmaven.test.skip=true -P packs verify

      # JPackage uses Wix 3.x in Java 11, 17, 21
      - name: Publish Install Pack
        shell: bash
        run: |
          scp -B target/jpackage/*.msi ${{env.AVN_REPO_USERNAME}}@avereon.com:${PRODUCT_DEPLOY_PATH}/${AVN_PLATFORM}/install.msi 2>&1
        # scp -B target/jpackage/*.exe ${{env.AVN_REPO_USERNAME}}@avereon.com:${PRODUCT_DEPLOY_PATH}/${AVN_PLATFORM}/install.exe 2>&1

#      # Originally implemented with IzPack
#      - name: Publish Install Pack (izpack)
#        shell: bash
#        run: |
#          scp -B target/*install.jar ${{env.AVN_REPO_USERNAME}}@avereon.com:${PRODUCT_DEPLOY_PATH}/${AVN_PLATFORM}/install.jar 2>&1

      - name: Publish Product Pack
        shell: bash
        run: |
          scp -B target/*product.jar ${{env.AVN_REPO_USERNAME}}@avereon.com:${PRODUCT_DEPLOY_PATH}/${AVN_PLATFORM}/product.jar 2>&1

      - name: Publish Product Card
        shell: bash
        run: |
          scp -B target/main/java/META-INF/*.card ${{env.AVN_REPO_USERNAME}}@avereon.com:${PRODUCT_DEPLOY_PATH}/${AVN_PLATFORM}/product.card 2>&1
